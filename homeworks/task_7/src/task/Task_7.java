package task;

public class Task_7 {
    public Class<Direction> subtask_1_EnumProgramming() {
        /*
        *   Создать в пакете task перечисление согласно описанию:
        * ---------------------------------------------------------------------
        *   Название: Direction
        *   Смысл: Направление перемещения
        *   Список значений:
        *       - North
        *       - West
        *       - South
        *       - East
        *   Методы:
        *       - Vector2 move(Vector2 start, double distance)  -  сформировать
        *         вектор, смещенный от данного в соответствующем направлении на
        *         указанное расстояние
        *   Дополнительно:
        *       - реализовать move можно как создав  абстрактный метод и  пере-
        *         определив его для каждого значения, так и через создание  по-
        *         лей со значением смещений.
        *       - система координат:
        *         ось X - координата увеличивается слева-направо
        *         ось Y - координата увеличивается сверху-вниз
        * ---------------------------------------------------------------------
        */

        return Direction.class;
    }

    public Class<Race> subtask_2_EnumProgramming() {
        /*
         *   Создать в пакете task перечисление согласно описанию:
         * ---------------------------------------------------------------------
         *   Название: Race
         *   Смысл: Раса фентези персонажа
         *   Список значений:
         *       - Orc      - сила 6, здоровье 12, ловкость 2
         *       - Elf      - сила 2, здоровье 9,  ловкость 9
         *       - Dwarf    - сила 6, здоровье 10, ловкость 4
         *       - Halfling - сила 1, здоровье 8,  ловкость 11
         *       - Human    - сила 6, здоровье 7,  ловкость 7
         *   Методы:
         *       - int strength()  - возвращает силу
         *       - int health()    - возвращает здоровье
         *       - int dexterity() - возвращает ловкость
         *   Дополнительно:
         *       - реализовать методы можно как создав абстрактный метод и пере-
         *         определив его для каждого значения, так и через создание  по-
         *         лей со значениями атрибутов.
         * ---------------------------------------------------------------------
         */

         return Race.class;
    }
}
